var search_data = {
    'index': {
        'searchIndex': ["","patterns","patterns\\abstracts","patterns\\commons","patterns\\interfaces","patterns\\abstracts\\abstractaccessible","patterns\\abstracts\\abstractsingleton","patterns\\commons\\collection","patterns\\interfaces\\arrayinterface","patterns\\interfaces\\collectioninterface","patterns\\interfaces\\crudinterface","patterns\\interfaces\\debuggableinterface","patterns\\interfaces\\iteratorinterface","patterns\\interfaces\\optionableinterface","patterns\\interfaces\\repositoryinterface","patterns\\interfaces\\routerinterface","patterns\\interfaces\\translatableinterface","patterns\\interfaces\\userinterface","patterns\\interfaces\\viewinterface","patterns\\interfaces\\webpageinterface","splclassloader","patterns\\abstracts\\abstractaccessible::__set","patterns\\abstracts\\abstractaccessible::__get","patterns\\abstracts\\abstractaccessible::__isset","patterns\\abstracts\\abstractaccessible::__unset","patterns\\abstracts\\abstractsingleton::getinstance","patterns\\abstracts\\abstractsingleton::__clone","patterns\\commons\\collection::__construct","patterns\\commons\\collection::setcollection","patterns\\commons\\collection::getcollection","patterns\\commons\\collection::rewind","patterns\\commons\\collection::reset","patterns\\commons\\collection::end","patterns\\commons\\collection::next","patterns\\commons\\collection::prev","patterns\\commons\\collection::valid","patterns\\commons\\collection::current","patterns\\commons\\collection::pos","patterns\\commons\\collection::key","patterns\\commons\\collection::offsetset","patterns\\commons\\collection::offsetexists","patterns\\commons\\collection::offsetunset","patterns\\commons\\collection::offsetget","patterns\\commons\\collection::push","patterns\\commons\\collection::count","patterns\\commons\\collection::shift","patterns\\commons\\collection::pop","patterns\\commons\\collection::unshift","patterns\\commons\\collection::each","patterns\\commons\\collection::in_array","patterns\\commons\\collection::key_exists","patterns\\commons\\collection::values","patterns\\commons\\collection::keys","patterns\\commons\\collection::getentry","patterns\\commons\\collection::setentry","patterns\\commons\\collection::addentry","patterns\\commons\\collection::issetentry","patterns\\commons\\collection::unsetentry","patterns\\interfaces\\arrayinterface::shift","patterns\\interfaces\\arrayinterface::pop","patterns\\interfaces\\arrayinterface::unshift","patterns\\interfaces\\arrayinterface::push","patterns\\interfaces\\arrayinterface::count","patterns\\interfaces\\arrayinterface::each","patterns\\interfaces\\arrayinterface::in_array","patterns\\interfaces\\arrayinterface::key_exists","patterns\\interfaces\\arrayinterface::values","patterns\\interfaces\\arrayinterface::keys","patterns\\interfaces\\collectioninterface::setcollection","patterns\\interfaces\\collectioninterface::getcollection","patterns\\interfaces\\collectioninterface::getentry","patterns\\interfaces\\collectioninterface::setentry","patterns\\interfaces\\collectioninterface::issetentry","patterns\\interfaces\\collectioninterface::unsetentry","patterns\\interfaces\\crudinterface::create","patterns\\interfaces\\crudinterface::read","patterns\\interfaces\\crudinterface::update","patterns\\interfaces\\crudinterface::delete","patterns\\interfaces\\debuggableinterface::setdebug","patterns\\interfaces\\debuggableinterface::getdebug","patterns\\interfaces\\debuggableinterface::isdebug","patterns\\interfaces\\iteratorinterface::reset","patterns\\interfaces\\iteratorinterface::end","patterns\\interfaces\\iteratorinterface::pos","patterns\\interfaces\\iteratorinterface::prev","patterns\\interfaces\\optionableinterface::setoptions","patterns\\interfaces\\optionableinterface::setoption","patterns\\interfaces\\optionableinterface::getoptions","patterns\\interfaces\\optionableinterface::getoption","patterns\\interfaces\\repositoryinterface::getall","patterns\\interfaces\\repositoryinterface::getoneby","patterns\\interfaces\\repositoryinterface::exists","patterns\\interfaces\\routerinterface::buildroutes","patterns\\interfaces\\routerinterface::routeexists","patterns\\interfaces\\routerinterface::getroute","patterns\\interfaces\\routerinterface::getrouteurl","patterns\\interfaces\\translatableinterface::setlanguage","patterns\\interfaces\\translatableinterface::getlanguage","patterns\\interfaces\\translatableinterface::translate","patterns\\interfaces\\translatableinterface::pluralize","patterns\\interfaces\\userinterface::authoring","patterns\\interfaces\\userinterface::signin","patterns\\interfaces\\userinterface::login","patterns\\interfaces\\userinterface::logout","patterns\\interfaces\\userinterface::islogged","patterns\\interfaces\\userinterface::setuserinfos","patterns\\interfaces\\userinterface::adduserinfo","patterns\\interfaces\\viewinterface::render","patterns\\interfaces\\viewinterface::getdefaultviewparams","patterns\\interfaces\\viewinterface::gettemplate","patterns\\interfaces\\webpageinterface::buildmenu","patterns\\interfaces\\webpageinterface::getmenu","patterns\\interfaces\\webpageinterface::buildtitle","patterns\\interfaces\\webpageinterface::gettitle","patterns\\interfaces\\webpageinterface::buildmetas","patterns\\interfaces\\webpageinterface::getmetas","patterns\\interfaces\\webpageinterface::getmeta","splclassloader::__construct","splclassloader::setnamespaceseparator","splclassloader::getnamespaceseparator","splclassloader::setincludepath","splclassloader::getincludepath","splclassloader::setfileextension","splclassloader::getfileextension","splclassloader::register","splclassloader::unregister","splclassloader::loadclass"],
        'info': [["","",".html","","",3],["Patterns","","Patterns.html","","",3],["Patterns\\Abstracts","","Patterns\/Abstracts.html","","",3],["Patterns\\Commons","","Patterns\/Commons.html","","",3],["Patterns\\Interfaces","","Patterns\/Interfaces.html","","",3],["AbstractAccessible","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractAccessible.html","","",1],["AbstractSingleton","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractSingleton.html","","A singleton abstract class",1],["Collection","Patterns\\Commons","Patterns\/Commons\/Collection.html","","Collection manager : allows to set, get, loop and seek",1],["ArrayInterface","Patterns\\Interfaces","Patterns\/Interfaces\/ArrayInterface.html","","Array interface",1],["CollectionInterface","Patterns\\Interfaces","Patterns\/Interfaces\/CollectionInterface.html","","Collection interface",1],["CrudInterface","Patterns\\Interfaces","Patterns\/Interfaces\/CrudInterface.html","","An interface for a basic CRUD model",1],["DebuggableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/DebuggableInterface.html","","A simple interface to manage a debuggable object",1],["IteratorInterface","Patterns\\Interfaces","Patterns\/Interfaces\/IteratorInterface.html","","Iterator interface",1],["OptionableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/OptionableInterface.html","","A simple interface to manage a set of options",1],["RepositoryInterface","Patterns\\Interfaces","Patterns\/Interfaces\/RepositoryInterface.html","","",1],["RouterInterface","Patterns\\Interfaces","Patterns\/Interfaces\/RouterInterface.html","","",1],["TranslatableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/TranslatableInterface.html","","A simple interface for translation objects",1],["UserInterface","Patterns\\Interfaces","Patterns\/Interfaces\/UserInterface.html","","A simple user interface",1],["ViewInterface","Patterns\\Interfaces","Patterns\/Interfaces\/ViewInterface.html","","",1],["WebPageInterface","Patterns\\Interfaces","Patterns\/Interfaces\/WebPageInterface.html","","",1],["SplClassLoader","","SplClassLoader.html","","SplClassLoader implementation that implements the technical",1],["AbstractAccessible::__set","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___set","(string $var, string $val)","Set an object property, accessing it by \"setVariable\"",2],["AbstractAccessible::__get","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___get","(string $var)","Get an object property, accessing it by \"getVariable\"",2],["AbstractAccessible::__isset","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___isset","(string $var)","Test if an object property has been set, using the",2],["AbstractAccessible::__unset","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___unset","(string $var)","Test if an object property has been set, using the",2],["AbstractSingleton::getInstance","Patterns\\Abstracts\\AbstractSingleton","Patterns\/Abstracts\/AbstractSingleton.html#method_getInstance","()","",2],["AbstractSingleton::__clone","Patterns\\Abstracts\\AbstractSingleton","Patterns\/Abstracts\/AbstractSingleton.html#method___clone","()","",2],["Collection::__construct","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method___construct","(array $content = array())","Construction of a collection",2],["Collection::setCollection","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_setCollection","(array $content)","Set the collection content",2],["Collection::getCollection","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_getCollection","()","Get the collection content",2],["Collection::rewind","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_rewind","()","Put the index value at the beginning of the collection",2],["Collection::reset","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_reset","()","Alias of self::rewind()",2],["Collection::end","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_end","()","Put the index value at the last index",2],["Collection::next","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_next","()","Increase the current index",2],["Collection::prev","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_prev","()","Decrease the current index",2],["Collection::valid","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_valid","()","Check if current value is set",2],["Collection::current","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_current","()","Gets the value of the collection at current index",2],["Collection::pos","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_pos","()","Alias of self::current()",2],["Collection::key","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_key","()","Gets the current index",2],["Collection::offsetSet","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetSet","($offset, $value)","Set a collection entry",2],["Collection::offsetExists","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetExists","($offset)","Check if a collection entry exists",2],["Collection::offsetUnset","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetUnset","($offset)","Unset a collection entry",2],["Collection::offsetGet","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetGet","($offset)","Get a collection entry",2],["Collection::push","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_push","(<abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $value)","Pushes a new value at the end of the collection, with",2],["Collection::count","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_count","()","Counts the number of entries in the collection",2],["Collection::shift","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_shift","()","Deletes a value at the beginning of the collection",2],["Collection::pop","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_pop","()","Deletes a value at the end of the collection",2],["Collection::unshift","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_unshift","(<abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $value)","Pushes a new value at the beginning of the collection,",2],["Collection::each","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_each","()","Returns the current key=>value pair and put increase",2],["Collection::in_array","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_in_array","($value)","Search a value in the current array and returns true",2],["Collection::key_exists","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_key_exists","($index)","Search if an entry exists with this key",2],["Collection::values","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_values","()","Returns an array with all values of the original array",2],["Collection::keys","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_keys","()","Returns an array with all keys of the original array",2],["Collection::getEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_getEntry","(int|string $index, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $default = null)","Gets a collection entry value by its index",2],["Collection::setEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_setEntry","(int|string|null $index = null, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $value)","Sets a collection entry value by its index",2],["Collection::addEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_addEntry","($index = null, $value)","Add a collection entry value (alias of \"setEntry()\")",2],["Collection::issetEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_issetEntry","(int|string $index)","Check if a collection entry exists by its index",2],["Collection::unsetEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_unsetEntry","(int|string $index)","Deletes a collection entry by its index",2],["ArrayInterface::shift","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_shift","()","Deletes a value at the beginning of the collection",2],["ArrayInterface::pop","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_pop","()","Deletes a value at the end of the collection",2],["ArrayInterface::unshift","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_unshift","(<abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $value)","Pushes a new value at the beginning of the collection,",2],["ArrayInterface::push","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_push","(<abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $value)","Pushes a new value at the end of the collection, with",2],["ArrayInterface::count","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_count","()","Counts the number of entries in the collection",2],["ArrayInterface::each","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_each","()","Returns the current key=>value pair and put increase",2],["ArrayInterface::in_array","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_in_array","($value)","Search a value in the current array and returns true",2],["ArrayInterface::key_exists","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_key_exists","($index)","Search if an entry exists with this key",2],["ArrayInterface::values","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_values","()","Returns an array with all values of the original array",2],["ArrayInterface::keys","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_keys","()","Returns an array with all keys of the original array",2],["CollectionInterface::setCollection","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_setCollection","(array $collection)","Set the collection content",2],["CollectionInterface::getCollection","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_getCollection","()","Get the collection content",2],["CollectionInterface::getEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_getEntry","(int|string $index, <abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $default = null)","Gets a collection entry value by its index",2],["CollectionInterface::setEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_setEntry","(int|string|null $index = null, <abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $value)","Sets a collection entry value by its index",2],["CollectionInterface::issetEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_issetEntry","(int|string $index)","Check if a collection entry exists by its index",2],["CollectionInterface::unsetEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_unsetEntry","(int|string $index)","Deletes a collection entry by its index",2],["CrudInterface::create","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_create","($data)","",2],["CrudInterface::read","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_read","($id)","",2],["CrudInterface::update","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_update","($id, $data)","",2],["CrudInterface::delete","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_delete","($id)","",2],["DebuggableInterface::setDebug","Patterns\\Interfaces\\DebuggableInterface","Patterns\/Interfaces\/DebuggableInterface.html#method_setDebug","($debug)","",2],["DebuggableInterface::getDebug","Patterns\\Interfaces\\DebuggableInterface","Patterns\/Interfaces\/DebuggableInterface.html#method_getDebug","()","",2],["DebuggableInterface::isDebug","Patterns\\Interfaces\\DebuggableInterface","Patterns\/Interfaces\/DebuggableInterface.html#method_isDebug","()","",2],["IteratorInterface::reset","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_reset","()","Put the index value at 0 This must be an alias of \\Iterator::rewind()",2],["IteratorInterface::end","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_end","()","Put the index value at the last index",2],["IteratorInterface::pos","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_pos","()","Get the current index This must be an alias of \\Iterator::current()",2],["IteratorInterface::prev","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_prev","()","Decrease the current index",2],["OptionableInterface::setOptions","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_setOptions","(array $options)","Set an array of options",2],["OptionableInterface::setOption","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_setOption","($name, $value)","Set the value of a specific option",2],["OptionableInterface::getOptions","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_getOptions","()","Get the array of options",2],["OptionableInterface::getOption","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_getOption","($name, $default = null)","Get the value of a specific option",2],["RepositoryInterface::getAll","Patterns\\Interfaces\\RepositoryInterface","Patterns\/Interfaces\/RepositoryInterface.html#method_getAll","()","",2],["RepositoryInterface::getOneBy","Patterns\\Interfaces\\RepositoryInterface","Patterns\/Interfaces\/RepositoryInterface.html#method_getOneBy","($prop_name, $value)","",2],["RepositoryInterface::exists","Patterns\\Interfaces\\RepositoryInterface","Patterns\/Interfaces\/RepositoryInterface.html#method_exists","($prop_name, $value)","",2],["RouterInterface::buildRoutes","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_buildRoutes","()","Build the possible routes",2],["RouterInterface::routeExists","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_routeExists","($route)","Check if a route exists",2],["RouterInterface::getRoute","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_getRoute","()","Get the current route requested",2],["RouterInterface::getRouteUrl","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_getRouteUrl","($page, $hash = null)","Build a new route URL",2],["TranslatableInterface::setLanguage","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_setLanguage","($lang, $throw_errors = true, $force_rebuild = false)","",2],["TranslatableInterface::getLanguage","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_getLanguage","()","",2],["TranslatableInterface::translate","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_translate","($index, array $args = array(), $lang = null)","",2],["TranslatableInterface::pluralize","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_pluralize","(array $indexes = array(), $number, array $args = array(), $lang = null)","",2],["UserInterface::authoring","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_authoring","($autologin = false)","",2],["UserInterface::signin","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_signin","(array $data, $autologin = false)","",2],["UserInterface::login","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_login","(array $data = array())","",2],["UserInterface::logout","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_logout","(array $data = array())","",2],["UserInterface::isLogged","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_isLogged","(array $data = array())","",2],["UserInterface::setUserInfos","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_setUserInfos","(array $data)","",2],["UserInterface::addUserInfo","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_addUserInfo","($var, $val)","",2],["ViewInterface::render","Patterns\\Interfaces\\ViewInterface","Patterns\/Interfaces\/ViewInterface.html#method_render","($view_file, array $params = array())","Building of a view content including a view file passing",2],["ViewInterface::getDefaultViewParams","Patterns\\Interfaces\\ViewInterface","Patterns\/Interfaces\/ViewInterface.html#method_getDefaultViewParams","()","Get an array of the default parameters for all views",2],["ViewInterface::getTemplate","Patterns\\Interfaces\\ViewInterface","Patterns\/Interfaces\/ViewInterface.html#method_getTemplate","($name)","Get a template file path (relative to `option['templates_dir']`)",2],["WebPageInterface::buildMenu","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_buildMenu","()","Build the page menu",2],["WebPageInterface::getMenu","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getMenu","()","Get the page menu",2],["WebPageInterface::buildTitle","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_buildTitle","()","Build the page title",2],["WebPageInterface::getTitle","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getTitle","()","Get the page title",2],["WebPageInterface::buildMetas","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_buildMetas","()","Build the page metas",2],["WebPageInterface::getMetas","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getMetas","()","Get the page metas",2],["WebPageInterface::getMeta","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getMeta","($name)","Get one page meta",2],["SplClassLoader::__construct","SplClassLoader","SplClassLoader.html#method___construct","($ns = null, $includePath = null)","Creates a new SplClassLoader that loads classes",2],["SplClassLoader::setNamespaceSeparator","SplClassLoader","SplClassLoader.html#method_setNamespaceSeparator","(string $sep)","Sets the namespace separator used by classes in the",2],["SplClassLoader::getNamespaceSeparator","SplClassLoader","SplClassLoader.html#method_getNamespaceSeparator","()","Gets the namespace seperator used by classes in the",2],["SplClassLoader::setIncludePath","SplClassLoader","SplClassLoader.html#method_setIncludePath","(string $includePath)","Sets the base include path for all class files in the",2],["SplClassLoader::getIncludePath","SplClassLoader","SplClassLoader.html#method_getIncludePath","()","Gets the base include path for all class files in the",2],["SplClassLoader::setFileExtension","SplClassLoader","SplClassLoader.html#method_setFileExtension","(string $fileExtension)","Sets the file extension of class files in the namespace",2],["SplClassLoader::getFileExtension","SplClassLoader","SplClassLoader.html#method_getFileExtension","()","Gets the file extension of class files in the namespace",2],["SplClassLoader::register","SplClassLoader","SplClassLoader.html#method_register","()","Installs this class loader on the SPL autoload stack.",2],["SplClassLoader::unregister","SplClassLoader","SplClassLoader.html#method_unregister","()","Uninstalls this class loader from the SPL autoloader",2],["SplClassLoader::loadClass","SplClassLoader","SplClassLoader.html#method_loadClass","(string $className)","Loads the given class or interface.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']