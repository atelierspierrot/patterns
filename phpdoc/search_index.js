var search_data = {
    'index': {
        'searchIndex': ["patterns","patterns\\abstracts","patterns\\commons","patterns\\interfaces","patterns\\abstracts\\abstractaccessible","patterns\\abstracts\\abstractoptionable","patterns\\abstracts\\abstractresponse","patterns\\abstracts\\abstractsingleton","patterns\\abstracts\\abstractstaticcreator","patterns\\abstracts\\abstractview","patterns\\commons\\collection","patterns\\commons\\configurationregistry","patterns\\commons\\registry","patterns\\interfaces\\arrayinterface","patterns\\interfaces\\cachableinterface","patterns\\interfaces\\collectioninterface","patterns\\interfaces\\crudinterface","patterns\\interfaces\\debuggableinterface","patterns\\interfaces\\iteratorinterface","patterns\\interfaces\\optionableinterface","patterns\\interfaces\\repositoryinterface","patterns\\interfaces\\requestinterface","patterns\\interfaces\\responseinterface","patterns\\interfaces\\routerinterface","patterns\\interfaces\\staticcreatorinterface","patterns\\interfaces\\staticoptionableinterface","patterns\\interfaces\\translatableinterface","patterns\\interfaces\\userinterface","patterns\\interfaces\\viewinterface","patterns\\interfaces\\webpageinterface","patterns\\abstracts\\abstractaccessible::__set","patterns\\abstracts\\abstractaccessible::__get","patterns\\abstracts\\abstractaccessible::__isset","patterns\\abstracts\\abstractaccessible::__unset","patterns\\abstracts\\abstractoptionable::setoptions","patterns\\abstracts\\abstractoptionable::setoption","patterns\\abstracts\\abstractoptionable::getoptions","patterns\\abstracts\\abstractoptionable::getoption","patterns\\abstracts\\abstractresponse::setbody","patterns\\abstracts\\abstractresponse::getbody","patterns\\abstracts\\abstractresponse::setheaders","patterns\\abstracts\\abstractresponse::addheader","patterns\\abstracts\\abstractresponse::getheaders","patterns\\abstracts\\abstractresponse::getheader","patterns\\abstracts\\abstractresponse::hasheader","patterns\\abstracts\\abstractresponse::renderheaders","patterns\\abstracts\\abstractresponse::redirect","patterns\\abstracts\\abstractresponse::send","patterns\\abstracts\\abstractresponse::download","patterns\\abstracts\\abstractresponse::flush","patterns\\abstracts\\abstractsingleton::getinstance","patterns\\abstracts\\abstractsingleton::getinstancebyclassname","patterns\\abstracts\\abstractsingleton::__clone","patterns\\abstracts\\abstractstaticcreator::init","patterns\\abstracts\\abstractstaticcreator::__construct","patterns\\abstracts\\abstractstaticcreator::create","patterns\\abstracts\\abstractview::setview","patterns\\abstracts\\abstractview::getview","patterns\\abstracts\\abstractview::setoutput","patterns\\abstracts\\abstractview::appendoutput","patterns\\abstracts\\abstractview::prependoutput","patterns\\abstracts\\abstractview::getoutput","patterns\\abstracts\\abstractview::resetparams","patterns\\abstracts\\abstractview::setparams","patterns\\abstracts\\abstractview::addparam","patterns\\abstracts\\abstractview::getparams","patterns\\abstracts\\abstractview::getparam","patterns\\abstracts\\abstractview::render","patterns\\abstracts\\abstractview::getdefaultviewparams","patterns\\abstracts\\abstractview::gettemplate","patterns\\commons\\collection::__construct","patterns\\commons\\collection::setcollection","patterns\\commons\\collection::getcollection","patterns\\commons\\collection::rewind","patterns\\commons\\collection::reset","patterns\\commons\\collection::end","patterns\\commons\\collection::next","patterns\\commons\\collection::prev","patterns\\commons\\collection::valid","patterns\\commons\\collection::current","patterns\\commons\\collection::pos","patterns\\commons\\collection::key","patterns\\commons\\collection::seek","patterns\\commons\\collection::offsetset","patterns\\commons\\collection::offsetexists","patterns\\commons\\collection::offsetunset","patterns\\commons\\collection::offsetget","patterns\\commons\\collection::push","patterns\\commons\\collection::count","patterns\\commons\\collection::shift","patterns\\commons\\collection::pop","patterns\\commons\\collection::unshift","patterns\\commons\\collection::each","patterns\\commons\\collection::in_array","patterns\\commons\\collection::key_exists","patterns\\commons\\collection::values","patterns\\commons\\collection::keys","patterns\\commons\\collection::getentry","patterns\\commons\\collection::setentry","patterns\\commons\\collection::addentry","patterns\\commons\\collection::issetentry","patterns\\commons\\collection::unsetentry","patterns\\commons\\configurationregistry::__construct","patterns\\commons\\configurationregistry::set","patterns\\commons\\configurationregistry::get","patterns\\commons\\configurationregistry::setconfigs","patterns\\commons\\configurationregistry::setconfig","patterns\\commons\\configurationregistry::addconfig","patterns\\commons\\configurationregistry::getconfigs","patterns\\commons\\configurationregistry::getconfig","patterns\\commons\\registry::dump","patterns\\commons\\registry::__set","patterns\\commons\\registry::__get","patterns\\commons\\registry::setentry","patterns\\commons\\registry::addentry","patterns\\commons\\registry::getentry","patterns\\commons\\registry::isentry","patterns\\commons\\registry::getkey","patterns\\commons\\registry::dumpstack","patterns\\commons\\registry::savestack","patterns\\commons\\registry::isstack","patterns\\commons\\registry::loadstack","patterns\\commons\\registry::getstackentry","patterns\\commons\\registry::getstackkey","patterns\\interfaces\\arrayinterface::shift","patterns\\interfaces\\arrayinterface::pop","patterns\\interfaces\\arrayinterface::unshift","patterns\\interfaces\\arrayinterface::push","patterns\\interfaces\\arrayinterface::count","patterns\\interfaces\\arrayinterface::each","patterns\\interfaces\\arrayinterface::in_array","patterns\\interfaces\\arrayinterface::key_exists","patterns\\interfaces\\arrayinterface::values","patterns\\interfaces\\arrayinterface::keys","patterns\\interfaces\\cachableinterface::getcachekey","patterns\\interfaces\\cachableinterface::iscached","patterns\\interfaces\\cachableinterface::getcache","patterns\\interfaces\\cachableinterface::setcache","patterns\\interfaces\\cachableinterface::invalidatecache","patterns\\interfaces\\collectioninterface::setcollection","patterns\\interfaces\\collectioninterface::getcollection","patterns\\interfaces\\collectioninterface::getentry","patterns\\interfaces\\collectioninterface::setentry","patterns\\interfaces\\collectioninterface::issetentry","patterns\\interfaces\\collectioninterface::unsetentry","patterns\\interfaces\\crudinterface::create","patterns\\interfaces\\crudinterface::read","patterns\\interfaces\\crudinterface::update","patterns\\interfaces\\crudinterface::delete","patterns\\interfaces\\debuggableinterface::setdebug","patterns\\interfaces\\debuggableinterface::getdebug","patterns\\interfaces\\debuggableinterface::isdebug","patterns\\interfaces\\iteratorinterface::reset","patterns\\interfaces\\iteratorinterface::end","patterns\\interfaces\\iteratorinterface::pos","patterns\\interfaces\\iteratorinterface::prev","patterns\\interfaces\\optionableinterface::setoptions","patterns\\interfaces\\optionableinterface::setoption","patterns\\interfaces\\optionableinterface::getoptions","patterns\\interfaces\\optionableinterface::getoption","patterns\\interfaces\\repositoryinterface::getall","patterns\\interfaces\\repositoryinterface::getoneby","patterns\\interfaces\\repositoryinterface::exists","patterns\\interfaces\\requestinterface::geturl","patterns\\interfaces\\requestinterface::getprotocol","patterns\\interfaces\\requestinterface::getmethod","patterns\\interfaces\\requestinterface::getheaders","patterns\\interfaces\\requestinterface::getarguments","patterns\\interfaces\\requestinterface::getdata","patterns\\interfaces\\requestinterface::getfiles","patterns\\interfaces\\requestinterface::getsession","patterns\\interfaces\\requestinterface::getcookies","patterns\\interfaces\\requestinterface::getauthentication","patterns\\interfaces\\responseinterface::redirect","patterns\\interfaces\\responseinterface::send","patterns\\interfaces\\responseinterface::download","patterns\\interfaces\\responseinterface::flush","patterns\\interfaces\\routerinterface::setroutes","patterns\\interfaces\\routerinterface::getroutes","patterns\\interfaces\\routerinterface::routeexists","patterns\\interfaces\\routerinterface::getroute","patterns\\interfaces\\routerinterface::generateurl","patterns\\interfaces\\routerinterface::matchurl","patterns\\interfaces\\routerinterface::distribute","patterns\\interfaces\\routerinterface::forward","patterns\\interfaces\\routerinterface::redirect","patterns\\interfaces\\staticcreatorinterface::create","patterns\\interfaces\\staticoptionableinterface::setoptions","patterns\\interfaces\\staticoptionableinterface::setoption","patterns\\interfaces\\staticoptionableinterface::getoptions","patterns\\interfaces\\staticoptionableinterface::getoption","patterns\\interfaces\\translatableinterface::setlanguage","patterns\\interfaces\\translatableinterface::getlanguage","patterns\\interfaces\\translatableinterface::translate","patterns\\interfaces\\translatableinterface::pluralize","patterns\\interfaces\\userinterface::authoring","patterns\\interfaces\\userinterface::signin","patterns\\interfaces\\userinterface::login","patterns\\interfaces\\userinterface::logout","patterns\\interfaces\\userinterface::islogged","patterns\\interfaces\\userinterface::setuserinfos","patterns\\interfaces\\userinterface::adduserinfo","patterns\\interfaces\\viewinterface::render","patterns\\interfaces\\viewinterface::getdefaultviewparams","patterns\\interfaces\\viewinterface::gettemplate","patterns\\interfaces\\webpageinterface::buildmenu","patterns\\interfaces\\webpageinterface::getmenu","patterns\\interfaces\\webpageinterface::buildtitle","patterns\\interfaces\\webpageinterface::gettitle","patterns\\interfaces\\webpageinterface::buildmetas","patterns\\interfaces\\webpageinterface::getmetas","patterns\\interfaces\\webpageinterface::getmeta"],
        'info': [["Patterns","","Patterns.html","","",3],["Patterns\\Abstracts","","Patterns\/Abstracts.html","","",3],["Patterns\\Commons","","Patterns\/Commons.html","","",3],["Patterns\\Interfaces","","Patterns\/Interfaces.html","","",3],["AbstractAccessible","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractAccessible.html","","Magic properties accessors  This abstract class defines",1],["AbstractOptionable","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractOptionable.html","","A simple object options manager  This class is a helper",1],["AbstractResponse","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractResponse.html","","Global HTML response class  This class defines a very",1],["AbstractSingleton","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractSingleton.html","","A singleton abstract class",1],["AbstractStaticCreator","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractStaticCreator.html","","This class allows to create objects that can be statically",1],["AbstractView","Patterns\\Abstracts","Patterns\/Abstracts\/AbstractView.html","","",1],["Collection","Patterns\\Commons","Patterns\/Commons\/Collection.html","","Collection manager : allows to set, get, loop and seek",1],["ConfigurationRegistry","Patterns\\Commons","Patterns\/Commons\/ConfigurationRegistry.html","","A manager for a configuration registry as an array",1],["Registry","Patterns\\Commons","Patterns\/Commons\/Registry.html","","A classic registry manager  This class handles a set",1],["ArrayInterface","Patterns\\Interfaces","Patterns\/Interfaces\/ArrayInterface.html","","Array interface",1],["CachableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/CachableInterface.html","","Manage a cachable item object",1],["CollectionInterface","Patterns\\Interfaces","Patterns\/Interfaces\/CollectionInterface.html","","Collection interface",1],["CrudInterface","Patterns\\Interfaces","Patterns\/Interfaces\/CrudInterface.html","","An interface for a basic CRUD model",1],["DebuggableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/DebuggableInterface.html","","A simple interface to manage a debuggable object",1],["IteratorInterface","Patterns\\Interfaces","Patterns\/Interfaces\/IteratorInterface.html","","Iterator interface",1],["OptionableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/OptionableInterface.html","","A simple interface to manage a set of options",1],["RepositoryInterface","Patterns\\Interfaces","Patterns\/Interfaces\/RepositoryInterface.html","","",1],["RequestInterface","Patterns\\Interfaces","Patterns\/Interfaces\/RequestInterface.html","","Interface for classic request handling",1],["ResponseInterface","Patterns\\Interfaces","Patterns\/Interfaces\/ResponseInterface.html","","Interface for classic response handling",1],["RouterInterface","Patterns\\Interfaces","Patterns\/Interfaces\/RouterInterface.html","","",1],["StaticCreatorInterface","Patterns\\Interfaces","Patterns\/Interfaces\/StaticCreatorInterface.html","","This interface allows to create objects that can be",1],["StaticOptionableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/StaticOptionableInterface.html","","A simple interface to manage a set of options statically",1],["TranslatableInterface","Patterns\\Interfaces","Patterns\/Interfaces\/TranslatableInterface.html","","A simple interface for translation objects",1],["UserInterface","Patterns\\Interfaces","Patterns\/Interfaces\/UserInterface.html","","A simple user interface",1],["ViewInterface","Patterns\\Interfaces","Patterns\/Interfaces\/ViewInterface.html","","",1],["WebPageInterface","Patterns\\Interfaces","Patterns\/Interfaces\/WebPageInterface.html","","",1],["AbstractAccessible::__set","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___set","(string $var, string $val)","Set an object property, accessing it by \"setVariable\"",2],["AbstractAccessible::__get","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___get","(string $var)","Get an object property, accessing it by \"getVariable\"",2],["AbstractAccessible::__isset","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___isset","(string $var)","Test if an object property has been set, using the",2],["AbstractAccessible::__unset","Patterns\\Abstracts\\AbstractAccessible","Patterns\/Abstracts\/AbstractAccessible.html#method___unset","(string $var)","Test if an object property has been set, using the",2],["AbstractOptionable::setOptions","Patterns\\Abstracts\\AbstractOptionable","Patterns\/Abstracts\/AbstractOptionable.html#method_setOptions","(array $options)","Set an array of options",2],["AbstractOptionable::setOption","Patterns\\Abstracts\\AbstractOptionable","Patterns\/Abstracts\/AbstractOptionable.html#method_setOption","(string $name, <abbr title=\"Patterns\\Abstracts\\misc\">misc<\/abbr> $value)","Set the value of a specific option",2],["AbstractOptionable::getOptions","Patterns\\Abstracts\\AbstractOptionable","Patterns\/Abstracts\/AbstractOptionable.html#method_getOptions","()","Get the array of options",2],["AbstractOptionable::getOption","Patterns\\Abstracts\\AbstractOptionable","Patterns\/Abstracts\/AbstractOptionable.html#method_getOption","(string $name, <abbr title=\"Patterns\\Abstracts\\misc\">misc<\/abbr> $default = null)","Get the value of a specific option",2],["AbstractResponse::setBody","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_setBody","(string $body)","",2],["AbstractResponse::getBody","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_getBody","()","",2],["AbstractResponse::setHeaders","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_setHeaders","(array $params)","",2],["AbstractResponse::addHeader","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_addHeader","(string $name, string $value = null)","",2],["AbstractResponse::getHeaders","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_getHeaders","()","",2],["AbstractResponse::getHeader","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_getHeader","(string $name)","",2],["AbstractResponse::hasHeader","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_hasHeader","(string $name)","",2],["AbstractResponse::renderHeaders","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_renderHeaders","()","",2],["AbstractResponse::redirect","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_redirect","(string $url, bool $permanent = false)","This method must process a header redirection to the",2],["AbstractResponse::send","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_send","(string $content = null, string $type = null)","This method must render the response in `$type` content-type",2],["AbstractResponse::download","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_download","(string $file = null, string $type = null, string $file_name = null)","This method must process a browser file download in",2],["AbstractResponse::flush","Patterns\\Abstracts\\AbstractResponse","Patterns\/Abstracts\/AbstractResponse.html#method_flush","(string $file_content = null, string $type = null)","This method must render a raw file content in `$type`",2],["AbstractSingleton::getInstance","Patterns\\Abstracts\\AbstractSingleton","Patterns\/Abstracts\/AbstractSingleton.html#method_getInstance","()","Static object getter: creation of an instance of the",2],["AbstractSingleton::getInstanceByClassname","Patterns\\Abstracts\\AbstractSingleton","Patterns\/Abstracts\/AbstractSingleton.html#method_getInstanceByClassname","($classname)","Static object getter: creation of an instance from",2],["AbstractSingleton::__clone","Patterns\\Abstracts\\AbstractSingleton","Patterns\/Abstracts\/AbstractSingleton.html#method___clone","()","Object cloning is avoid",2],["AbstractStaticCreator::init","Patterns\\Abstracts\\AbstractStaticCreator","Patterns\/Abstracts\/AbstractStaticCreator.html#method_init","()","Force any descendant to implement a special constructor",2],["AbstractStaticCreator::__construct","Patterns\\Abstracts\\AbstractStaticCreator","Patterns\/Abstracts\/AbstractStaticCreator.html#method___construct","()","Magic default constructor for non-static use",2],["AbstractStaticCreator::create","Patterns\\Abstracts\\AbstractStaticCreator","Patterns\/Abstracts\/AbstractStaticCreator.html#method_create","()","Static creation of the object",2],["AbstractView::setView","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_setView","(<abbr title=\"Patterns\\Abstracts\\str\">str<\/abbr> $path)","Set the view name to parse",2],["AbstractView::getView","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getView","()","Get the view name",2],["AbstractView::setOutput","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_setOutput","(<abbr title=\"Patterns\\Abstracts\\str\">str<\/abbr> $str)","Set the output content",2],["AbstractView::appendOutput","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_appendOutput","($content)","Append the output content to the existing content",2],["AbstractView::prependOutput","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_prependOutput","($content)","Prepend the output content to the existing content",2],["AbstractView::getOutput","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getOutput","()","Get the current view rendering output",2],["AbstractView::resetParams","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_resetParams","()","Reset the parameters for the current view on an empty",2],["AbstractView::setParams","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_setParams","(array $params)","Set an array of the parameters for the current view",2],["AbstractView::addParam","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_addParam","(<abbr title=\"Patterns\\Abstracts\\str\">str<\/abbr> $name, <abbr title=\"Patterns\\Abstracts\\misc\">misc<\/abbr> $val)","Add an entry of parameters for the current view",2],["AbstractView::getParams","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getParams","(bool $alone = false)","Get the parameters for the current view",2],["AbstractView::getParam","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getParam","($name, $default = null)","Get a value of the parameters for the current view",2],["AbstractView::render","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_render","($view_file, array $params = array())","Building of a view content including a view file passing",2],["AbstractView::getDefaultViewParams","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getDefaultViewParams","()","Get the default parameters for all views",2],["AbstractView::getTemplate","Patterns\\Abstracts\\AbstractView","Patterns\/Abstracts\/AbstractView.html#method_getTemplate","($name)","Search a view file in the current file system",2],["Collection::__construct","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method___construct","(array $content = array())","Construction of a collection",2],["Collection::setCollection","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_setCollection","(array $content)","Set the collection content",2],["Collection::getCollection","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_getCollection","()","Get the collection content",2],["Collection::rewind","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_rewind","()","Put the index value at the beginning of the collection",2],["Collection::reset","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_reset","()","Alias of self::rewind()",2],["Collection::end","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_end","()","Put the index value at the last index",2],["Collection::next","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_next","()","Increase the current index",2],["Collection::prev","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_prev","()","Decrease the current index",2],["Collection::valid","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_valid","()","Check if current value is set",2],["Collection::current","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_current","()","Gets the value of the collection at current index",2],["Collection::pos","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_pos","()","Alias of self::current()",2],["Collection::key","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_key","()","Gets the current index",2],["Collection::seek","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_seek","(int|string $index)","Define the current index",2],["Collection::offsetSet","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetSet","($offset, $value)","Set a collection entry",2],["Collection::offsetExists","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetExists","($offset)","Check if a collection entry exists",2],["Collection::offsetUnset","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetUnset","($offset)","Unset a collection entry",2],["Collection::offsetGet","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_offsetGet","($offset)","Get a collection entry",2],["Collection::push","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_push","(<abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $value)","Pushes a new value at the end of the collection, with",2],["Collection::count","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_count","()","Counts the number of entries in the collection",2],["Collection::shift","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_shift","()","Deletes a value at the beginning of the collection",2],["Collection::pop","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_pop","()","Deletes a value at the end of the collection",2],["Collection::unshift","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_unshift","(<abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $value)","Pushes a new value at the beginning of the collection,",2],["Collection::each","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_each","()","Returns the current key=>value pair and put increase",2],["Collection::in_array","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_in_array","($value)","Search a value in the current array and returns true",2],["Collection::key_exists","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_key_exists","($index)","Search if an entry exists with this key",2],["Collection::values","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_values","()","Returns an array with all values of the original array",2],["Collection::keys","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_keys","()","Returns an array with all keys of the original array",2],["Collection::getEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_getEntry","(int|string $index, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $default = null)","Gets a collection entry value by its index",2],["Collection::setEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_setEntry","(int|string|null $index = null, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $value)","Sets a collection entry value by its index",2],["Collection::addEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_addEntry","($index = null, $value)","Add a collection entry value (alias of \"setEntry()\")",2],["Collection::issetEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_issetEntry","(int|string $index)","Check if a collection entry exists by its index",2],["Collection::unsetEntry","Patterns\\Commons\\Collection","Patterns\/Commons\/Collection.html#method_unsetEntry","(int|string $index)","Deletes a collection entry by its index",2],["ConfigurationRegistry::__construct","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method___construct","()","Construction : initialization of the registry on an",2],["ConfigurationRegistry::set","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_set","(string $name, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $value, string $scope = null)","Set the value of a specific option with depth",2],["ConfigurationRegistry::get","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_get","(string $name, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $default = null, string $scope = null)","Get the value of a specific option with depth",2],["ConfigurationRegistry::setConfigs","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_setConfigs","(array $options, string $scope = null)","Set an array of options",2],["ConfigurationRegistry::setConfig","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_setConfig","(string $name, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $value, string $scope = null)","Set the value of a specific option (no scope notation",2],["ConfigurationRegistry::addConfig","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_addConfig","($name, $value, $scope = null)","Alias of the `setConfig` method",2],["ConfigurationRegistry::getConfigs","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_getConfigs","(<abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $default = null, string $scope = null)","Get the array of options (from a specific scope if",2],["ConfigurationRegistry::getConfig","Patterns\\Commons\\ConfigurationRegistry","Patterns\/Commons\/ConfigurationRegistry.html#method_getConfig","(string $name, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $default = null, string $scope = null)","Get the value of a specific option (no scope notation",2],["Registry::dump","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_dump","()","Get current registry",2],["Registry::__set","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method___set","(string $var = null, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $val = null)","Set an entry in the instance registry (magic setter)",2],["Registry::__get","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method___get","(string $var = null)","Get an entry from the instance registry (magic getter)",2],["Registry::setEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_setEntry","(string $var = null, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $val = null, string $section = false)","Set an entry in the instance registry",2],["Registry::addEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_addEntry","(<abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $val = null, string $section = false)","Add an entry in a section of the instance registry",2],["Registry::getEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_getEntry","(string $var = null, string $section = false, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $default = null)","Get an entry from the instance registry",2],["Registry::isEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_isEntry","(string $var = null, string $section = false)","Check if an entry exists in registry",2],["Registry::getKey","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_getKey","(<abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $val = null, string $var = null, string $section = false)","Search a key in registry",2],["Registry::dumpStack","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_dumpStack","(string $index = null, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $default = null)","Get a full stack from registry stacks",2],["Registry::saveStack","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_saveStack","(string $index = null, bool $and_clean = false)","Save a stack of entries in registry",2],["Registry::isStack","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_isStack","(string $index = null)","Check if a stack exists in registry",2],["Registry::loadStack","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_loadStack","(string $index = null)","Load a stack in registry (actual registry is overwrites)",2],["Registry::getStackEntry","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_getStackEntry","(string $var = null, string $section = false, string $stack = null, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $default = null)","Get a stack entry of the registry stacks",2],["Registry::getStackKey","Patterns\\Commons\\Registry","Patterns\/Commons\/Registry.html#method_getStackKey","(string $val = null, string $section = false, string $stack = null, <abbr title=\"Patterns\\Commons\\misc\">misc<\/abbr> $default = null)","Get the key of a stack entry of the registry stacks",2],["ArrayInterface::shift","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_shift","()","Deletes a value at the beginning of the collection",2],["ArrayInterface::pop","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_pop","()","Deletes a value at the end of the collection",2],["ArrayInterface::unshift","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_unshift","(<abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $value)","Pushes a new value at the beginning of the collection,",2],["ArrayInterface::push","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_push","(<abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $value)","Pushes a new value at the end of the collection, with",2],["ArrayInterface::count","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_count","()","Counts the number of entries in the collection",2],["ArrayInterface::each","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_each","()","Returns the current key=>value pair and put increase",2],["ArrayInterface::in_array","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_in_array","($value)","Search a value in the current array and returns true",2],["ArrayInterface::key_exists","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_key_exists","($index)","Search if an entry exists with this key",2],["ArrayInterface::values","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_values","()","Returns an array with all values of the original array",2],["ArrayInterface::keys","Patterns\\Interfaces\\ArrayInterface","Patterns\/Interfaces\/ArrayInterface.html#method_keys","()","Returns an array with all keys of the original array",2],["CachableInterface::getCacheKey","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_getCacheKey","()","Get the key of the current cached item",2],["CachableInterface::isCached","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_isCached","()","Test if an item is already cached and if its cache",2],["CachableInterface::getCache","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_getCache","()","Get a cache content for an item",2],["CachableInterface::setCache","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_setCache","(<abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $content)","Set a cache content for an item",2],["CachableInterface::invalidateCache","Patterns\\Interfaces\\CachableInterface","Patterns\/Interfaces\/CachableInterface.html#method_invalidateCache","()","Clear a cache content for an item",2],["CollectionInterface::setCollection","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_setCollection","(array $collection)","Set the collection content",2],["CollectionInterface::getCollection","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_getCollection","()","Get the collection content",2],["CollectionInterface::getEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_getEntry","(int|string $index, <abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $default = null)","Gets a collection entry value by its index",2],["CollectionInterface::setEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_setEntry","(int|string|null $index = null, <abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $value)","Sets a collection entry value by its index",2],["CollectionInterface::issetEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_issetEntry","(int|string $index)","Check if a collection entry exists by its index",2],["CollectionInterface::unsetEntry","Patterns\\Interfaces\\CollectionInterface","Patterns\/Interfaces\/CollectionInterface.html#method_unsetEntry","(int|string $index)","Deletes a collection entry by its index",2],["CrudInterface::create","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_create","($data)","",2],["CrudInterface::read","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_read","($id)","",2],["CrudInterface::update","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_update","($id, $data)","",2],["CrudInterface::delete","Patterns\\Interfaces\\CrudInterface","Patterns\/Interfaces\/CrudInterface.html#method_delete","($id)","",2],["DebuggableInterface::setDebug","Patterns\\Interfaces\\DebuggableInterface","Patterns\/Interfaces\/DebuggableInterface.html#method_setDebug","($debug)","",2],["DebuggableInterface::getDebug","Patterns\\Interfaces\\DebuggableInterface","Patterns\/Interfaces\/DebuggableInterface.html#method_getDebug","()","",2],["DebuggableInterface::isDebug","Patterns\\Interfaces\\DebuggableInterface","Patterns\/Interfaces\/DebuggableInterface.html#method_isDebug","()","",2],["IteratorInterface::reset","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_reset","()","Put the index value at 0 This must be an alias of \\Iterator::rewind()",2],["IteratorInterface::end","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_end","()","Put the index value at the last index",2],["IteratorInterface::pos","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_pos","()","Get the current index This must be an alias of \\Iterator::current()",2],["IteratorInterface::prev","Patterns\\Interfaces\\IteratorInterface","Patterns\/Interfaces\/IteratorInterface.html#method_prev","()","Decrease the current index",2],["OptionableInterface::setOptions","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_setOptions","(array $options)","Set an array of options",2],["OptionableInterface::setOption","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_setOption","($name, $value)","Set the value of a specific option",2],["OptionableInterface::getOptions","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_getOptions","()","Get the array of options",2],["OptionableInterface::getOption","Patterns\\Interfaces\\OptionableInterface","Patterns\/Interfaces\/OptionableInterface.html#method_getOption","($name, $default = null)","Get the value of a specific option",2],["RepositoryInterface::getAll","Patterns\\Interfaces\\RepositoryInterface","Patterns\/Interfaces\/RepositoryInterface.html#method_getAll","()","",2],["RepositoryInterface::getOneBy","Patterns\\Interfaces\\RepositoryInterface","Patterns\/Interfaces\/RepositoryInterface.html#method_getOneBy","($prop_name, $value)","",2],["RepositoryInterface::exists","Patterns\\Interfaces\\RepositoryInterface","Patterns\/Interfaces\/RepositoryInterface.html#method_exists","($prop_name, $value)","",2],["RequestInterface::getUrl","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getUrl","()","",2],["RequestInterface::getProtocol","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getProtocol","()","",2],["RequestInterface::getMethod","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getMethod","()","",2],["RequestInterface::getHeaders","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getHeaders","()","",2],["RequestInterface::getArguments","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getArguments","()","",2],["RequestInterface::getData","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getData","()","",2],["RequestInterface::getFiles","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getFiles","()","",2],["RequestInterface::getSession","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getSession","()","",2],["RequestInterface::getCookies","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getCookies","()","",2],["RequestInterface::getAuthentication","Patterns\\Interfaces\\RequestInterface","Patterns\/Interfaces\/RequestInterface.html#method_getAuthentication","()","",2],["ResponseInterface::redirect","Patterns\\Interfaces\\ResponseInterface","Patterns\/Interfaces\/ResponseInterface.html#method_redirect","(string $url, bool $permanent = false)","Make a redirection by headers",2],["ResponseInterface::send","Patterns\\Interfaces\\ResponseInterface","Patterns\/Interfaces\/ResponseInterface.html#method_send","(string $content = null, string $type = null)","Send the response to the device",2],["ResponseInterface::download","Patterns\\Interfaces\\ResponseInterface","Patterns\/Interfaces\/ResponseInterface.html#method_download","(string $file = null, string $type = null, string $file_name = null)","Force device to download a file",2],["ResponseInterface::flush","Patterns\\Interfaces\\ResponseInterface","Patterns\/Interfaces\/ResponseInterface.html#method_flush","(string $file_content = null, string $type = null)","Flush (display) a file content",2],["RouterInterface::setRoutes","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_setRoutes","(<a href=\"Patterns\/Commons\/Collection.html\"><abbr title=\"Patterns\\Commons\\Collection\">Collection<\/abbr><\/a> $collection)","Set the routes collection",2],["RouterInterface::getRoutes","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_getRoutes","()","Get the routes collection",2],["RouterInterface::routeExists","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_routeExists","(string $route)","Check if a route exists",2],["RouterInterface::getRoute","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_getRoute","()","Get the current route requested",2],["RouterInterface::generateUrl","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_generateUrl","(<abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $route_infos, string $base_uri = null, string $hash = null, string $separator = &#039;&amp;amp;&#039;)","Build a new route URL",2],["RouterInterface::matchUrl","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_matchUrl","(<abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $pathinfo)","Distribute the current URL to the corresponding route",2],["RouterInterface::distribute","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_distribute","()","Actually dispatch the current route",2],["RouterInterface::forward","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_forward","(<abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $pathinfo, string $hash = null)","Forward the application to a new route (no HTTP redirect)",2],["RouterInterface::redirect","Patterns\\Interfaces\\RouterInterface","Patterns\/Interfaces\/RouterInterface.html#method_redirect","(<abbr title=\"Patterns\\Interfaces\\misc\">misc<\/abbr> $pathinfo, string $hash = null)","Make a redirection to a new route (HTTP redirect)",2],["StaticCreatorInterface::create","Patterns\\Interfaces\\StaticCreatorInterface","Patterns\/Interfaces\/StaticCreatorInterface.html#method_create","()","",2],["StaticOptionableInterface::setOptions","Patterns\\Interfaces\\StaticOptionableInterface","Patterns\/Interfaces\/StaticOptionableInterface.html#method_setOptions","(array $options)","Set an array of options",2],["StaticOptionableInterface::setOption","Patterns\\Interfaces\\StaticOptionableInterface","Patterns\/Interfaces\/StaticOptionableInterface.html#method_setOption","($name, $value)","Set the value of a specific option",2],["StaticOptionableInterface::getOptions","Patterns\\Interfaces\\StaticOptionableInterface","Patterns\/Interfaces\/StaticOptionableInterface.html#method_getOptions","()","Get the array of options",2],["StaticOptionableInterface::getOption","Patterns\\Interfaces\\StaticOptionableInterface","Patterns\/Interfaces\/StaticOptionableInterface.html#method_getOption","($name, $default = null)","Get the value of a specific option",2],["TranslatableInterface::setLanguage","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_setLanguage","($lang, $throw_errors = true, $force_rebuild = false)","",2],["TranslatableInterface::getLanguage","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_getLanguage","()","",2],["TranslatableInterface::translate","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_translate","($index, array $args = array(), $lang = null)","",2],["TranslatableInterface::pluralize","Patterns\\Interfaces\\TranslatableInterface","Patterns\/Interfaces\/TranslatableInterface.html#method_pluralize","(array $indexes = array(), $number, array $args = array(), $lang = null)","",2],["UserInterface::authoring","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_authoring","($autologin = false)","",2],["UserInterface::signin","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_signin","(array $data, $autologin = false)","",2],["UserInterface::login","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_login","(array $data = array())","",2],["UserInterface::logout","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_logout","(array $data = array())","",2],["UserInterface::isLogged","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_isLogged","(array $data = array())","",2],["UserInterface::setUserInfos","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_setUserInfos","(array $data)","",2],["UserInterface::addUserInfo","Patterns\\Interfaces\\UserInterface","Patterns\/Interfaces\/UserInterface.html#method_addUserInfo","($var, $val)","",2],["ViewInterface::render","Patterns\\Interfaces\\ViewInterface","Patterns\/Interfaces\/ViewInterface.html#method_render","($view_file, array $params = array())","Building of a view content including a view file passing",2],["ViewInterface::getDefaultViewParams","Patterns\\Interfaces\\ViewInterface","Patterns\/Interfaces\/ViewInterface.html#method_getDefaultViewParams","()","Get an array of the default parameters for all views",2],["ViewInterface::getTemplate","Patterns\\Interfaces\\ViewInterface","Patterns\/Interfaces\/ViewInterface.html#method_getTemplate","($name)","Get a template file path (relative to `option['templates_dir']`)",2],["WebPageInterface::buildMenu","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_buildMenu","()","Build the page menu",2],["WebPageInterface::getMenu","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getMenu","()","Get the page menu",2],["WebPageInterface::buildTitle","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_buildTitle","()","Build the page title",2],["WebPageInterface::getTitle","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getTitle","()","Get the page title",2],["WebPageInterface::buildMetas","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_buildMetas","()","Build the page metas",2],["WebPageInterface::getMetas","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getMetas","()","Get the page metas",2],["WebPageInterface::getMeta","Patterns\\Interfaces\\WebPageInterface","Patterns\/Interfaces\/WebPageInterface.html#method_getMeta","($name)","Get one page meta",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']